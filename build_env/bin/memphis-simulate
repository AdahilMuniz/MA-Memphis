#!/usr/bin/env python3
import sys
from argparse import ArgumentParser
from os import getenv
from distutils.dir_util import remove_tree
from os import makedirs
from subprocess import Popen
import signal

def signal_handler(sig, frame):
	simulation.terminate()
	debugger.terminate()

if __name__ == "__main__":
	ENV_PLATFORM_PATH = "MA_MEMPHIS_PATH"
	PLATFORM_PATH = getenv(ENV_PLATFORM_PATH)
	if PLATFORM_PATH is None:
		sys.exit("ERROR: "+ENV_PLATFORM_PATH+" not defined.")

	parser = ArgumentParser(description="MA-Memphis hardware generator.")
	parser.add_argument('scenario_folder', help="Folder where the scenario was generated")
	parser.add_argument('time_limit', help="Simulation time in ms")
	args = parser.parse_args()

	scenario_folder = args.scenario_folder
	time_limit = args.time_limit

	try:
		remove_tree("{}/log".format(scenario_folder))
		makedirs("{}/log".format(scenario_folder))
	except:
		pass

	signal.signal(signal.SIGINT, signal_handler)

	simulation = Popen(["{}/memphis".format(scenario_folder), "-c", "{}".format(time_limit)])

	ENV_DEBUGGER_PATH = "MEMPHIS_DEBUGGER_PATH"
	DEBUGGER_PATH = getenv(ENV_DEBUGGER_PATH)
	if DEBUGGER_PATH is None:
		sys.exit("ERROR: "+ENV_DEBUGGER_PATH+" not defined.")

	debugger = Popen(["java", "-jar", "{}/Memphis_Debugger.jar".format(DEBUGGER_PATH), "{}/debug/platform.cfg".format(scenario_folder)])

	simulation.wait()
	debugger.wait()
